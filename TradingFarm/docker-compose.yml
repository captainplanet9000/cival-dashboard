services:
  # Next.js Frontend
  frontend:
    build:
      context: ./next-dashboard
      dockerfile: Dockerfile
    container_name: tradingfarm_frontend
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8100
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:8100
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiJ9.ZopqpbRJ2Vi2LjXfF9ItLlZlzKqNJPPrQjZTZqNtxJs
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - tradingfarm_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tradingfarm_backend
    ports:
      - "8100:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://postgres:postgres_password@timescaledb:5432/tradingfarm
      - SUPABASE_URL=http://localhost:54321
      - SUPABASE_SERVICE_ROLE=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIn0.M2d2z4SFn5R0vRQ-2O6LgSWwRHrYYd6_N0Am6qbBtKE
      - SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiJ9.ZopqpbRJ2Vi2LjXfF9ItLlZlzKqNJPPrQjZTZqNtxJs
      - OPENAI_API_KEY=sk-dummy-key
      - LAYERZERO_API_KEY=dummy-key
      - JWT_SECRET=very_secure_jwt_secret_placeholder_for_development
    # Temporarily commenting out volume mapping for troubleshooting
    # volumes:
    #   - ./backend:/app
    restart: unless-stopped
    networks:
      - tradingfarm_network
    depends_on:
      - timescaledb

  # Note: ElizaOS integration is disabled as the image is not publicly available

  # TimescaleDB (PostgreSQL with TimescaleDB extension)
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: tradingfarm_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=tradingfarm
    volumes:
      - tradingfarm_db_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5533:5432"  # Changed to avoid conflicts
    restart: unless-stopped
    networks:
      - tradingfarm_network

  # Windmill Workflow Orchestration
  windmill:
    image: ghcr.io/windmill-labs/windmill:latest
    container_name: tradingfarm_windmill
    ports:
      - "8202:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres_password@timescaledb:5432/tradingfarm
      - BASE_URL=http://localhost:8202
      - RUST_LOG=info
      - DISABLE_AUTH=false
      - DISABLE_NSJAIL=true
    restart: unless-stopped
    networks:
      - tradingfarm_network
    depends_on:
      - timescaledb

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: tradingfarm_redis
    ports:
      - "6479:6379"  # Changed port to avoid conflicts
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - tradingfarm_network
    command: redis-server --appendonly yes

volumes:
  tradingfarm_db_data:
  redis_data:

networks:
  tradingfarm_network:
    driver: bridge
