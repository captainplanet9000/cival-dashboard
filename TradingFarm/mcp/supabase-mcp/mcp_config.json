{
  "name": "trading-farm-supabase-mcp",
  "version": "0.1.0",
  "description": "MCP server for Trading Farm Supabase database operations",
  "tools": [
    {
      "name": "supabase_query",
      "description": "Query Supabase database tables with various operations",
      "parameters": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["select", "insert", "update", "delete"],
            "description": "The operation to perform on the table"
          },
          "tableName": {
            "type": "string",
            "description": "The name of the table to operate on"
          },
          "data": {
            "type": "object",
            "description": "The data for the operation, format depends on the operation type"
          }
        },
        "required": ["operation", "tableName"]
      }
    },
    {
      "name": "get_farms",
      "description": "Get a list of all farms or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["eq", "in", "gt", "lt", "gte", "lte", "neq", "like"],
                  "description": "Filter type"
                },
                "column": {
                  "type": "string",
                  "description": "Column to filter on"
                },
                "value": {
                  "description": "Value to filter by"
                }
              }
            }
          },
          "orderBy": {
            "type": "object",
            "description": "Optional ordering",
            "properties": {
              "column": {
                "type": "string",
                "description": "Column to order by"
              },
              "ascending": {
                "type": "boolean",
                "description": "Order direction"
              }
            }
          }
        }
      }
    },
    {
      "name": "get_farm_by_id",
      "description": "Get a farm by its ID",
      "parameters": {
        "type": "object",
        "properties": {
          "farmId": {
            "type": "string",
            "description": "The UUID of the farm to retrieve"
          }
        },
        "required": ["farmId"]
      }
    },
    {
      "name": "create_farm",
      "description": "Create a new farm",
      "parameters": {
        "type": "object",
        "properties": {
          "farm": {
            "type": "object",
            "description": "Farm data to insert",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the farm"
              },
              "description": {
                "type": "string",
                "description": "Description of the farm"
              },
              "status": {
                "type": "string",
                "enum": ["active", "paused", "archived"],
                "description": "Status of the farm"
              },
              "goal_id": {
                "type": "string",
                "description": "Associated goal ID (UUID)"
              },
              "user_id": {
                "type": "string",
                "description": "Owner user ID (UUID)"
              },
              "settings": {
                "type": "object",
                "description": "Farm settings JSON"
              },
              "performance": {
                "type": "object",
                "description": "Performance metrics JSON"
              }
            },
            "required": ["name", "status", "user_id"]
          }
        },
        "required": ["farm"]
      }
    },
    {
      "name": "update_farm",
      "description": "Update an existing farm",
      "parameters": {
        "type": "object",
        "properties": {
          "farmId": {
            "type": "string",
            "description": "The UUID of the farm to update"
          },
          "farmData": {
            "type": "object",
            "description": "Farm data to update"
          }
        },
        "required": ["farmId", "farmData"]
      }
    },
    {
      "name": "get_agents",
      "description": "Get a list of all agents or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query",
            "items": {
              "type": "object"
            }
          },
          "orderBy": {
            "type": "object",
            "description": "Optional ordering"
          }
        }
      }
    },
    {
      "name": "get_agents_by_farm",
      "description": "Get all agents belonging to a specific farm",
      "parameters": {
        "type": "object",
        "properties": {
          "farmId": {
            "type": "string",
            "description": "The UUID of the farm"
          }
        },
        "required": ["farmId"]
      }
    },
    {
      "name": "create_agent",
      "description": "Create a new agent",
      "parameters": {
        "type": "object",
        "properties": {
          "agent": {
            "type": "object",
            "description": "Agent data to insert",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the agent"
              },
              "description": {
                "type": "string",
                "description": "Description of the agent"
              },
              "status": {
                "type": "string",
                "enum": ["active", "paused", "archived"],
                "description": "Status of the agent"
              },
              "farm_id": {
                "type": "string",
                "description": "Associated farm ID (UUID)"
              },
              "settings": {
                "type": "object",
                "description": "Agent settings JSON"
              },
              "instructions": {
                "type": "object",
                "description": "Agent instructions JSON"
              },
              "capabilities": {
                "type": "object",
                "description": "Agent capabilities JSON"
              },
              "performance": {
                "type": "object",
                "description": "Performance metrics JSON"
              }
            },
            "required": ["name", "farm_id"]
          }
        },
        "required": ["agent"]
      }
    },
    {
      "name": "get_strategies",
      "description": "Get a list of all strategies or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query"
          }
        }
      }
    },
    {
      "name": "get_goals",
      "description": "Get a list of all goals or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query"
          }
        }
      }
    },
    {
      "name": "get_positions",
      "description": "Get a list of all positions or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query"
          }
        }
      }
    },
    {
      "name": "get_position_by_id",
      "description": "Get a position by its ID with all related information",
      "parameters": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "description": "The UUID of the position to retrieve"
          }
        },
        "required": ["positionId"]
      }
    },
    {
      "name": "get_orders",
      "description": "Get a list of all orders or filter by parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query"
          }
        }
      }
    },
    {
      "name": "create_ai_insight",
      "description": "Create a new AI insight for ElizaOS integration",
      "parameters": {
        "type": "object",
        "properties": {
          "insight": {
            "type": "object",
            "description": "Insight data to insert",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of insight"
              },
              "content": {
                "type": "string",
                "description": "Insight content"
              },
              "metadata": {
                "type": "object",
                "description": "Additional metadata"
              },
              "position_id": {
                "type": "string",
                "description": "Associated position ID if applicable"
              }
            },
            "required": ["type", "content"]
          }
        },
        "required": ["insight"]
      }
    },
    {
      "name": "get_ai_insights",
      "description": "Get a list of AI insights",
      "parameters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "description": "Optional filters to apply to the query"
          }
        }
      }
    },
    {
      "name": "get_tables",
      "description": "Get a list of all tables in the Supabase database",
      "parameters": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "get_table_schema",
      "description": "Get the schema for a specific table",
      "parameters": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "description": "The name of the table to get the schema for"
          }
        },
        "required": ["table"]
      }
    },
    {
      "name": "check_connection",
      "description": "Check if the connection to Supabase is working",
      "parameters": {
        "type": "object",
        "properties": {}
      }
    }
  ],
  "server": {
    "type": "websocket",
    "url": "ws://localhost:3500"
  }
}
