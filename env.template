# Development Environment Variables for Cival Dashboard

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379

# API Endpoints
TRADING_API_URL=http://localhost:3001
MCP_API_URL=http://localhost:3000
VAULT_API_URL=http://localhost:3002
NEXT_PUBLIC_PYTHON_WS_URL=ws://localhost:8765

# API Keys (populate with your actual keys)
TRADING_API_KEY=your_trading_api_key_here
VAULT_API_KEY=your_vault_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Database
DATABASE_URL=postgresql://postgres:password@localhost:5432/trading

# Authentication (if implementing auth)
NEXTAUTH_SECRET=your_nextauth_secret_here
NEXTAUTH_URL=http://localhost:5000

# External Services
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key_here
POLYGON_API_KEY=your_polygon_api_key_here

# Feature Flags
ENABLE_PAPER_TRADING=true
ENABLE_REAL_TRADING=false
ENABLE_BACKTESTING=true

# MemGPT Configuration (for python-ai-services)
# MEMGPT_CONFIG_PATH= # Optional: Path to a specific MemGPT JSON config file
# If not using MEMGPT_CONFIG_PATH, these vars can configure MemGPT directly:
MEMGPT_DB_URL=${DATABASE_URL} # Use the existing DATABASE_URL for Supabase/Postgres
MEMGPT_MODEL_TYPE=google # Example: 'google', 'openai', 'azure', 'ollama'
# MEMGPT_MODEL_ENDPOINT= # Only if not using standard model types like 'openai' or if using custom local server
MEMGPT_MODEL_API_KEY_ENV_VAR=GOOGLE_API_KEY # Name of env var holding API key for MemGPT's LLM (e.g. GOOGLE_API_KEY)
MEMGPT_EMBEDDING_MODEL_TYPE=google # Example: 'google' (for text-embedding-004), 'openai', 'all-minilm' (local sentence-transformers)
# MEMGPT_DEFAULT_PERSONA_NAME=memgpt_starter # Optional: Name of default persona
# MEMGPT_DEFAULT_HUMAN_NAME=cs_phd # Optional: Name of default human definition

# Shared Knowledge Service Configuration
KNOWLEDGE_EMBEDDING_MODEL="all-MiniLM-L6-v2" # Default Sentence Transformer model for knowledge base embeddings (384 dims)
# KNOWLEDGE_EMBEDDING_MODEL_OPENAI="text-embedding-ada-002" # Example if using OpenAI for knowledge embeddings (1536 dims)
# Note: If using a different model, ensure DB schema (vector dimension) and model output dimension align.

# Production Overrides (for deployment)
NODE_ENV=development 